# Database Configuration# Database Configuration

spring.datasource.url=jdbc:mysql://localhost:3306/assignment_management?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true&createDatabaseIfNotExist=truespring.datasource.url=jdbc:mysql://localhost:3306/assignment_management?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true&createDatabaseIfNotExist=true

spring.datasource.username=rootspring.datasource.username=root

spring.datasource.password=\#San2020spring.datasource.password=\#San2020

spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driverspring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver



# JPA Configuration# JPA Configuration

spring.jpa.hibernate.ddl-auto=updatespring.jpa.hibernate.ddl-auto=update

spring.jpa.show-sql=truespring.jpa.show-sql=true

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialectspring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

spring.jpa.properties.hibernate.format_sql=truespring.jpa.properties.hibernate.format_sql=true



# Server Configuration# Server Configuration

server.port=8080server.port=8080

server.servlet.context-path=/server.servlet.context-path=/



# Application Info# Application Info

spring.application.name=Assignment Management Systemspring.application.name=Assignment Management System

info.app.name=Assignment Management Systeminfo.app.name=Assignment Management System

info.app.description=A comprehensive assignment management system for teachers and studentsinfo.app.description=A comprehensive assignment management system for teachers and students

info.app.version=1.0.0info.app.version=1.0.0



# File Upload Configuration# File Upload Configuration

spring.servlet.multipart.enabled=truespring.servlet.multipart.enabled=true

spring.servlet.multipart.max-file-size=10MBspring.servlet.multipart.max-file-size=10MB

spring.servlet.multipart.max-request-size=10MBspring.servlet.multipart.max-request-size=10MB



# File Storage Path# File Storage Path

file.upload-dir=./uploadsfile.upload-dir=./uploads



# JWT Configuration# JWT Configuration

jwt.secret=myVeryLongSecretKeyForJWTTokensNeedsToBeAtLeast256BitsLongForSecurityjwt.secret=myVeryLongSecretKeyForJWTTokensNeedsToBeAtLeast256BitsLongForSecurity

jwt.expirationMs=86400000jwt.expirationMs=86400000



# CORS Configuration# CORS Configuration

cors.allowed-origins=http://localhost:5173,http://localhost:5174,http://localhost:3000cors.allowed-origins=http://localhost:5173,http://localhost:5174,http://localhost:3000



# Logging Configuration# Logging Configuration

logging.level.root=INFOlogging.level.root=INFO

logging.level.com.assignmentmanagement=INFOlogging.level.com.assignmentmanagement=INFO

logging.level.org.springframework.boot=INFOlogging.level.org.springframework.boot=INFO

logging.level.org.springframework.web=INFOlogging.level.org.springframework.web=INFO

logging.pattern.console=%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(%5p) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%nlogging.pattern.console=%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(%5p) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n



# Database Connection Pool# Database Connection Pool

spring.datasource.hikari.maximum-pool-size=10spring.datasource.hikari.maximum-pool-size=10

spring.datasource.hikari.minimum-idle=5spring.datasource.hikari.minimum-idle=5

spring.datasource.hikari.connection-timeout=20000spring.datasource.hikari.connection-timeout=20000

spring.datasource.hikari.idle-timeout=300000spring.datasource.hikari.idle-timeout=300000

spring.datasource.hikari.max-lifetime=1200000spring.datasource.hikari.max-lifetime=1200000



# Banner Configuration# Banner Configuration

spring.main.banner-mode=consolespring.main.banner-mode=console

spring.main.allow-circular-references=truespring.main.allow-circular-references=true



# Google OAuth Configuration# Google OAuth Configuration

# Replace with your actual Google credentials from Google Cloud Console# Replace with your actual Google credentials from Google Cloud Console

# Set these in application-local.properties or as environment variables# Set these in application-local.properties or as environment variables

spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID:your-google-client-id-here}spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID:your-google-client-id-here}

spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET:your-google-client-secret-here}spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET:your-google-client-secret-here}

spring.security.oauth2.client.registration.google.scope=openid,profile,emailspring.security.oauth2.client.registration.google.scope=openid,profile,email

spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:5173/auth/callbackspring.security.oauth2.client.registration.google.redirect-uri=http://localhost:5173/auth/callback



spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/authspring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth

spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/tokenspring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token

spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v2/userinfospring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v2/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=email